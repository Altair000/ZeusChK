from telebot import TeleBot
from telebot import types
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from database.db import *
from utils.bot_config import *

#Crear men√∫ principal
def create_main_keyboard():
    main_keyboard = InlineKeyboardMarkup(row_width=2)
    b1 = InlineKeyboardButton("‚Ä¢ Cuenta ‚Ä¢", callback_data="cuenta")
    b2 = InlineKeyboardButton("‚Ä¢ Gateways ‚Ä¢", callback_data="gateways")
    b3 = InlineKeyboardButton("‚Ä¢ Tools ‚Ä¢", callback_data="tools")
    b4 = InlineKeyboardButton("‚Ä¢ Planes y Precios ‚Ä¢", callback_data="precios")
    b5 = InlineKeyboardButton("‚Ä¢ Canal Oficial ‚Ä¢", url='https://t.me/+UggxblGvjyY3NDZh')
    main_keyboard.add(b1, b2, b3, b4, b5)
    return main_keyboard

def create_back_keyboard():
    back_keyboard = InlineKeyboardMarkup()
    back_button = InlineKeyboardButton("‚Ä¢ Atr√°s ‚Ä¢", callback_data="atras")
    back_keyboard.add(back_button)
    return back_keyboard
  
# Define el manejador de callbacks para la Opci√≥n 1
@bot.callback_query_handler(func=lambda call: call.data == "cuenta")
def handle_opci√≥n1(call):
    user = call.from_user
    owner_id = get_owner_id()
    chat_id = call.message.chat.id
    user_info = f""" ===============================
          ü§ñ INFORMACI√ìN DE USUARIO ü§ñ
          üÜî ID: <code>{user.id}</code>
          üèÜ Plus: {'‚úÖ' if is_plus(chat_id) else '‚ùå'}
          üíµ Cr√©ditos: {get_tokens(chat_id)}
          üëë Es Propietario: {'‚úÖ' if is_owner(user.id) or user.id == owner_id else '‚ùå'}
        ===============================
          """

    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=user_info,
        reply_markup=create_back_keyboard(),  # Agrega el bot√≥n "Atr√°s"
        parse_mode="HTML"
    )

@bot.callback_query_handler(func=lambda call: call.data == "atras")
def handle_back(call):
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=f'''=========================|
            ü§ñ {BOT_NAME} ü§ñ
         
            Si tienes algun problemas o
            necesitas ayuda no dudes en
            contactar a mi programadorüòÉ
         
            By: <a href="tg://user?id={OWNER}">@Alta√Ør</a>
            =========================|
            ''',
        reply_markup=create_main_keyboard(),  # Regresa al teclado principal
        parse_mode="HTML",
        disable_web_page_preview=True
    )

# Define el manejador de callbacks para la opci√≥n3
@bot.callback_query_handler(func=lambda call: call.data == 'tools')
def handle_opcion3(call):
    tools_text=f'''======================|
                ‚ú• TOOLS ‚ú•

           ‚úò Bin Informaci√≥n
           ‚Ä£ Comando: /bin
           ‚Ä£ Ejemplo: /bin 445100
           ‚Ä£ Info: Muestra informaci√≥n 
           detallada acerca de un Bin.

           ‚úò Generar CC'S
           ‚Ä£ Comando: /gen
           ‚Ä£ Ejemplo: /gen 445100
           ‚Ä£ Info: Genera 10 CC'S a partir de un Bin o Extra.
        =======================|
        '''
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=tools_text,
        reply_markup=create_back_keyboard(),
        disable_web_page_preview=True,
        parse_mode="HTML"
    )

# Define el manejador de callbacks para la opci√≥n4
def create_prices_main_keyboard():
    prices_main_keyboard = InlineKeyboardMarkup(row_width=0)
    credit_button = InlineKeyboardButton("‚Ä¢ Cr√©ditos ‚Ä¢", callback_data="creditos")
    plus_button = InlineKeyboardButton("‚Ä¢ Plus ‚Ä¢", callback_data="plus")
    buy_button = InlineKeyboardButton("‚Ä¢ Buy ‚Ä¢", url='https://t.me/alltallr')
    prices_main_keyboard.add(credit_button, plus_button, buy_button)
    return prices_main_keyboard

combined_keyboard = types.InlineKeyboardMarkup()
combined_keyboard.add(types.InlineKeyboardButton("‚ú• Buy ‚ú•", url='https://t.me/alltallr'))
    
combined_keyboard.add(types.InlineKeyboardButton("‚Ä¢ Atr√°s ‚Ä¢", callback_data='atras'))

@bot.callback_query_handler(func=lambda call: call.data == 'precios')
def handle_opcion4(call):
    precios_text=f'''================================|
            ‚ú• Planes & Precios ‚ú•

        ‚ñπ Para realizar la compra de alguna     
        Subscripci√≥n o Paquete de Cr√©ditos,
        presione el bot√≥n de ‚ú• Buy ‚ú• 
        y sera dirijido hacia el admin.

        ‚ôñ M√©todos de Pago ‚ôñ
        ‚ñπ USDT (binance-coinex)
        ‚ñπ Peso Cubano (transferencia)
        ‚ñπ Peso Mexicano (transferencia)
        ‚ñπ Pago M√≥vil


        ‚ôõ Subscripci√≥n Plus ‚ôõ
        ‚ñ∏ Acceso a todos los Gateways, de forma ilimitada.
        ‚ñ∏ Descuento exclusivos en la compra de Cr√©ditos.


        ‚ú• Subscripci√≥n Plus ‚ú•

üú≤ 15/d√≠as = $5.00 USD
+25/cr√©ditos de Regalo.

üú≤ 30/d√≠as = $8.50 USD
+50/cr√©ditos de Regalo.


        üú≤ Cr√©ditos üú≤
        ‚ñ∏ Acceso a diversos comandos solo disponibles con cr√©ditos.
        ‚ñ∏ Acceso a los Gateways con Modo MASS, solo disponible con cr√©ditos.


        ‚ú• Paquete Cr√©ditos ‚ú•

üú≤ 100/cr√©ditos = $4.50 USD
üú≤ 200/cr√©ditos = $8.00 USD
üú≤ 250/cr√©ditos = $10.50 USD
        =================================|
        '''
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=precios_text,
        reply_markup=combined_keyboard,
        disable_web_page_preview=True,
        parse_mode="HTML"
    )

def register_callback_handlers(bot: TeleBot):
    bot.register_callback_query_handler(handle_back, func=lambda call: call.data == 'atras')
    bot.register_callback_query_handler(handle_back, func=lambda call: call.data == 'cuenta')
    bot.register_callback_query_handler(handle_opcion3, func=lambda call: call.data == 'tools')
    bot.register_callback_query_handler(handle_opcion4, func=lambda call: call.data == 'precios')